generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  difficulty    String?
  accounts      Account[]
  sessions      Session[]
  booking       Booking[]
  payment       Payment[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Payment {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  booking   Booking  @relation(fields: [bookingId], references: [id])
  bookingId Int
  amount    Int
  method    String
  time      DateTime
}

model GameSession {
  id           Int       @id @default(autoincrement())
  bookingClose DateTime
  bookingOpen  DateTime
  startTime    DateTime
  endTime      DateTime
  location     String
  maxUsers     Int
  booking      Booking[]
}

model Booking {
  id            Int         @id @default(autoincrement())
  user          User        @relation(fields: [userId], references: [id])
  userId        String
  gameSession   GameSession @relation(fields: [gameSessionId], references: [id])
  gameSessionId Int
  createdAt     DateTime    @default(now())
  paymentMethod String
  status        String
  payment       Payment[]
}
